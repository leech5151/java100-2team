<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 객체를 자동으로 생성하려면,
     namespace의 값이 인터페이스 이름과 같아야 한다. -->
<mapper namespace="java100.app.dao.Pet_StargramDao">

    <resultMap type="pet_stargram" id="pet_stargramMap">
        <id column="str_no" property="pet_stargramNo"/>
        <result column="conts" property="contents"/>
        <result column="rdt" property="registrationDate"/>
        <result column="m_no" property="memberNo"/>
        <result column="likes" property="likes"/>
         
        <!-- 첨부파일 정보를 담을 수 있도록 설정한다. -->
        <collection property="files"  ofType="pet_stargramUploadFile">
            <id     column="mda_no"       property="no"/>
            <result column="file"   property="filename"/>
            <result column="str_no"   property="pet_stargramNo"/>
        </collection>
        
    </resultMap>


    <select id="findAll" resultMap="pet_stargramMap" parameterType="map">
          select 
            s.str_no,
            s.conts,
            s.rdt,
            s.likes,
            sm.file,
            sm.str_no
        from pet_str as s
        left join str_mda as sm 
             on s.str_no=sm.str_no 

        <!-- <if test="words != null">
	        <where>
	            <foreach collection="words" item="word">
	                or title like '%${word}%'
	            </foreach>
	        </where>
        </if>
        
        order by 
        <choose>
            <when test="orderColumn == 'name' and align == 'desc'">
                name desc
            </when>
            <when test="orderColumn == 'name' and align == 'asc'">
                name asc
            </when>
            <when test="orderColumn == 'nic_name' and align == 'desc'">
                nic_name desc
            </when>
            <when test="orderColumn == 'nic_name' and align == 'asc'">
                nic_name asc
            </when>
            <when test="orderColumn == 'email' and align == 'desc'">
                email desc
            </when>
            <when test="orderColumn == 'email' and align == 'asc'">
                email asc
            </when>
            <when test="orderColumn == 'cre_date' and align == 'desc'">
                cre_date desc
            </when>
            <when test="orderColumn == 'cre_date' and align == 'asc'">
                cre_date asc
            </when>
            <otherwise>
                m_no desc
            </otherwise>
        </choose> -->
        <!-- 페이지징 처리 -->
        limit #{startIndex}, #{size}
    </select>
    
    <select id="countAll" resultType="int">
        select count(*) from pet_str
    </select>
    
    <insert id="insert" parameterType="pet_stargram"
        useGeneratedKeys="true" keyColumn="str_no" keyProperty="pet_stargramNo">
        insert into pet_str(m_no, conts, rdt, likes)
        values(#{member.memberNo}, #{contents}, now(), #{likes})
    </insert>

    <select id="findByNo" resultMap="pet_stargramMap" parameterType="int">
        select 
            s.str_no,
            s.conts,
            s.rdt,
            s.likes,
            sm.file,
            sm.str_no
        from 
            pet_str as s 
            left join str_mda as sm
            on s.str_no=sm.str_no
        where s.str_no=#{value}
         
    </select>
        
    <!-- <select id="findByEmailAndPassword" 
            resultMap="memberMap" parameterType="map">
        <include refid="select1"/>
        from memb
        where email=#{email} and pwd=password(#{password})
    </select>
    -->
    
      <!-- <update id="updateViewCount" parameterType="int">
        update trainning set 
            vwcnt=vwcnt + 1
        where t_no=#{value}
    </update>  -->
    
    <update id="updateLikes" parameterType="int">
        update pet_str set 
            likes=likes + 1
        where str_no=#{value}
    </update> 
    
    
    <update id="update" parameterType="pet_stargram">
        update pet_str set
            conts=#{contents},
            rdt=#{registrationDate},
            likes=#{likes} 
        where str_no=#{pet_stargramNo}
    </update>

    <delete id="delete" parameterType="int">
        delete from pet_str
        where str_no=#{value}
    </delete>  
</mapper>  









